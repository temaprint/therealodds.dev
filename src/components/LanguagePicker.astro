---
import { languages } from '../i18n/ui';
import { getLangFromUrl, getLocalizedPath, removeLocaleFromPath } from '../i18n/utils';

const lang = getLangFromUrl(Astro.url);
const currentPath = removeLocaleFromPath(Astro.url.pathname);
---

<div class="relative inline-block text-left">
  <div>
    <button type="button" class="language-picker-button inline-flex w-full justify-center gap-x-1.5 rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50" id="language-menu-button" aria-expanded="true" aria-haspopup="true">
      <span class="text-lg mr-1">🌐</span>
      {languages[lang]}
      <svg class="-mr-1 h-5 w-5 text-gray-400" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
        <path fill-rule="evenodd" d="M5.23 7.21a.75.75 0 011.06.02L10 11.168l3.71-3.938a.75.75 0 111.08 1.04l-4.25 4.5a.75.75 0 01-1.08 0l-4.25-4.5a.75.75 0 01.02-1.06z" clip-rule="evenodd" />
      </svg>
    </button>
  </div>

  <div class="language-picker-menu absolute right-0 z-10 mt-2 w-56 origin-top-right rounded-md bg-white shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none hidden" role="menu" aria-orientation="vertical" aria-labelledby="language-menu-button" tabindex="-1">
    <div class="py-1" role="none">
      {Object.entries(languages).map(([langCode, langName]) => (
        <a 
          href={getLocalizedPath(currentPath, langCode)} 
          class={`block px-4 py-2 text-sm hover:bg-gray-100 hover:text-gray-900 ${lang === langCode ? 'bg-gray-100 text-gray-900 font-medium' : 'text-gray-700'}`}
          role="menuitem" 
          tabindex="-1"
        >
          <span class="text-lg mr-2">
            {langCode === 'en' && '🇺🇸'}
            {langCode === 'es' && '🇪🇸'}
            {langCode === 'ko' && '🇰🇷'}
            {langCode === 'ja' && '🇯🇵'}
            {langCode === 'de' && '🇩🇪'}
          </span>
          {langName}
        </a>
      ))}
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const button = document.getElementById('language-menu-button');
    const menu = document.querySelector('.language-picker-menu');
    
    if (button && menu) {
      button.addEventListener('click', function() {
        menu.classList.toggle('hidden');
      });
      
      // Close menu when clicking outside
      document.addEventListener('click', function(event) {
        if (!button.contains(event.target as Node) && !menu.contains(event.target as Node)) {
          menu.classList.add('hidden');
        }
      });
    }
  });
</script>