---
import { getLangFromUrl } from '../i18n/utils';
import { languages } from '../i18n/ui';

export interface Props {
  title: string;
  description?: string;
  image?: string;
  article?: boolean;
  publishDate?: Date;
  author?: string;
  keywords?: string[];
}

const {
  title,
  description = "Educational demo showing the real odds of gambling games. Learn the mathematics and psychology behind gambling to make informed decisions.",
  image = "/og-image.jpg",
  article = false,
  publishDate,
  author = "The Real Odds Team",
  keywords = []
} = Astro.props;

const lang = getLangFromUrl(Astro.url);
const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const ogImageURL = new URL(image, Astro.site);

const defaultKeywords = [
  'gambling odds',
  'gambling mathematics',
  'gambling education',
  'responsible gambling',
  'gambling addiction',
  'casino odds',
  'gambling probability',
  'house edge',
  'gambling awareness'
];

const allKeywords = [...defaultKeywords, ...keywords].join(', ');

const alternateLanguages = Object.keys(languages).filter(l => l !== lang);
---

<!doctype html>
<html lang={lang}>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />

    <!-- Primary Meta Tags -->
    <title>{title}</title>
    <meta name="title" content={title} />
    <meta name="description" content={description} />
    <meta name="keywords" content={allKeywords} />
    <meta name="author" content={author} />
    <meta name="robots" content="index, follow" />
    <meta name="language" content={lang} />
    <link rel="canonical" href={canonicalURL} />

    <!-- Favicon Package - Generated by AddFavicon.com -->
    <link rel="icon" href="/favicon.ico" sizes="32x32">
    <link rel="icon" href="/favicon.svg" type="image/svg+xml">
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="48x48" href="/favicon-48x48.png">
    <link rel="apple-touch-icon" sizes="180x180" href="/favicon-180x180.png">
    <link rel="icon" type="image/png" sizes="192x192" href="/favicon-192x192.png">
    <link rel="icon" type="image/png" sizes="256x256" href="/favicon-256x256.png">
    <link rel="icon" type="image/png" sizes="512x512" href="/favicon-512x512.png">
    <link rel="manifest" href="/site.webmanifest">
    <meta name="theme-color" content="#3b82f6">

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content={article ? "article" : "website"} />
    <meta property="og:url" content={canonicalURL} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={ogImageURL} />
    <meta property="og:site_name" content="The Real Odds" />
    <meta property="og:locale" content={lang === 'en' ? 'en_US' : lang === 'es' ? 'es_ES' : lang === 'ja' ? 'ja_JP' : lang === 'ko' ? 'ko_KR' : 'de_DE'} />
    {alternateLanguages.map((altLang) => (
      <meta property="og:locale:alternate" content={altLang === 'en' ? 'en_US' : altLang === 'es' ? 'es_ES' : altLang === 'ja' ? 'ja_JP' : altLang === 'ko' ? 'ko_KR' : 'de_DE'} />
    ))}
    {article && publishDate && (
      <meta property="article:published_time" content={publishDate.toISOString()} />
    )}
    {article && author && (
      <meta property="article:author" content={author} />
    )}

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={canonicalURL} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={ogImageURL} />

    <!-- Alternate Language Links -->
    {alternateLanguages.map((altLang) => {
      const altPath = altLang === 'en' ? Astro.url.pathname.replace(/^\/(es|ko|ja|de)/, '') : `/${altLang}${Astro.url.pathname.replace(/^\/(es|ko|ja|de)/, '')}`;
      return <link rel="alternate" hreflang={altLang} href={new URL(altPath || '/', Astro.site)} />;
    })}
    <link rel="alternate" hreflang="x-default" href={new URL(Astro.url.pathname.replace(/^\/(es|ko|ja|de)/, '') || '/', Astro.site)} />

    <!-- Favicon -->
    <link rel="apple-touch-icon" sizes="180x180" href="/favicon.svg" />

    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">

    <!-- Schema.org Structured Data -->
    <script type="application/ld+json" set:html={JSON.stringify({
      "@context": "https://schema.org",
      "@type": article ? "Article" : "WebSite",
      "name": title,
      "description": description,
      "url": canonicalURL.toString(),
      "inLanguage": lang,
      ...(article && publishDate ? { "datePublished": publishDate.toISOString() } : {}),
      ...(article && author ? { "author": { "@type": "Person", "name": author } } : {}),
      ...(!article ? {
        "potentialAction": {
          "@type": "SearchAction",
          "target": {
            "@type": "EntryPoint",
            "urlTemplate": `${canonicalURL.origin}/articles?q={search_term_string}`
          },
          "query-input": "required name=search_term_string"
        }
      } : {})
    })} />
  </head>
  <body class="bg-gray-50 text-gray-900 font-inter">
    <slot />

<!-- Favicon switcher (active/passive) -->
<script>
  const activeFavicon = "/favicon.ico";
  const passiveFavicon = "/favicon-passive-32x32.png";

  function setFavicon(url) {
    document.querySelectorAll("link[rel='icon']").forEach(el => el.remove());
    const link = document.createElement("link");
    link.rel = "icon";
    link.href = url + "?v=" + Date.now(); // cache-busting
    document.head.appendChild(link);
  }

  function updateFavicon() {
    setFavicon(document.hidden ? passiveFavicon : activeFavicon);
  }

  document.addEventListener("visibilitychange", updateFavicon);
  window.addEventListener("focus", updateFavicon);
  window.addEventListener("blur", updateFavicon);

  updateFavicon();
</script>

  </body>
</html>

<style is:global>
  html {
    scroll-behavior: smooth;
  }
  
  body {
    line-height: 1.6;
  }

  * {
    box-sizing: border-box;
  }
</style>